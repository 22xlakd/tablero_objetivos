exit
c
Variable.all
c_variable
exit
c_variable.save
c_variable.puntaje = 0
exit
c_variable.errors
c_variable.save
c_variable.puntaje = 0
c_variable.errors
c_variable.save
c_variable
exit
c
break 10
Variable.all
n
Variable.find_or_create_by(id: c_row[0])
c
n
c
n
c
n
c
n
c
data.each do |d|
data.each{|d| puts d}
data.count
c
data
n
data
n
data
exit
file_data[34][1]
file_data[34][2]
file_data[34]
file_data.count
file_data[1]
file_data[0]
file_data
exit
@ftp.ls
@ftp.chdir("imagenes")
@ftp.ls
@ftp.login("mastrangelo", "dPt1SAxEV")
@ftp.passive = true
@ftp.connect("mastrangeloneored.com.ar",port)
port = 1021
c
n
c
port
n
a.ls
a.passive = true
a.login(Rails.configuration.x.importer.connection_data[:user], Rails.configuration.x.importer.connection_data[:password])
a.connect(Rails.configuration.x.importer.connection_data[:host], 4821)
port
a.connect(Rails.configuration.x.importer.connection_data[:host], port)
a = Net::FTP.new
a.list
a.nlist('*')
a.nlist(*)
a.passive = true
a.login(Rails.configuration.x.importer.connection_data[:user], Rails.configuration.x.importer.connection_data[:password])
a.connect(Rails.configuration.x.importer.connection_data[:host], port)
a = Net::FTP.new
Net::FTP.new(Rails.configuration.x.importer.connection_data[:host], port)
port
n
Rails.configuration.x.importer.connection_data
c
flash[:alert].capitalize
flash[:alert]
flash.keys
flash.methods.grep /mes/
flash.methods.grep /ms/
flash.methods.grep /error/
flash.methods.grep /erro/
flash.error_msg
flash.class
flash.alert
flash.notice
flash.methods
flash
c
flash
c
flash[:alert]
notice
devise_error_messages!
flash
c
flash
c
@user.errors.count
@user.errors
@user
local_variables
c
local_variables
local_variable
locals
c
best_obj
c
params
c
objetivos
c
codigo_sucursal
n
params
c
@variable.update(variable_params)
variable_params["objetivos_attributes"]["2"]
variable_params
c
variable_params
variable_params["objetivos_attributes"]
variable_params["objetivos_attributes"] = {"0"=>{"id"=>"1", "proyeccion_mensual"=>"56.0", "porcentaje_proyectado"=>"10.0", "valor"=>"103.0"}, "1"=>{"id"=>"5", "proyeccion_mensual"=>"12.0", "porcentaje_proyectado"=>"10.0", "valor"=>"20.0"}, "2"=>{"id"=>"", "proyeccion_mensual"=>"55", "porcentaje_proyectado"=>"35", "valor"=>"11", "user_id"=>"4"}}
variable_params["objetivos_attributes"]
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]["2"] = {"id"=>"", "proyeccion_mensual"=>"55", "porcentaje_proyectado"=>"35", "valor"=>"11", "user_id"=>"4"}
variable_params["objetivos_attributes"]["2"]
{"id"=>"", "proyeccion_mensual"=>"55", "porcentaje_proyectado"=>"35", "valor"=>"11"}
variable_params["objetivos_attributes"]["2"] = {"id"=>"", "proyeccion_mensual"=>"55", "porcentaje_proyectado"=>"35", "valor"=>"11"}
variable_params["objetivos_attributes"]["2"]
c
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]["2"]["user_id"] = "2"
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]["2"][:user_id] = "2"
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]["2"]["user_id"] = "4"
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]["2"]["user_id"] = "4"
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]
variable_params
@variable.errors
@variable.update(variable_params)
c
user_params
n
params[:user][:password].blank? && params[:user][:password_confirmation].blank?
params
c
Role.all
c
ff.index
ff.methods.grep /inde/
ff.object.methods.grep /is/
ff.object.methods.grep /first/
ff.object.methods
ff.object
ff.display
ff.methods.grep /is/
ff.class
ff.methods.grep /first/
ff.first?
ff
c
ff.object.user.nombre
ff.object.user
ff.object
ff.object.class
ff.methods.grep /obj/
ff
c
@variable.objetivos.group_by(&:user_id).as_json
@variable.objetivos.group_by(&:user_id).to_json.methods
@json_objectives_by_user
c
@variable.objetivos.group_by(&:user_id).to_json
@variable.objetivos.group_by(&:user_id)
@variable.objetivos.group_by(&:user.id)
@variable.objetivos.first
@variable.objetivos.count
@variable.objetivos
@variable
params
local_variables
local_variable
locals
c
objetivo
local_variables
locals
c
objetivo
locals
c
a.errors
a = Objetivo.create(variable: variable, proyeccion_mensual: 5, porcentaje_proyectado: 5, user: user)
c
a.errors.second
a.errors.first
a.errors.last
a.errors
a.errors.class
a.errors[1]
a.errors.last
a.errors.first
a.errors.count
a.errors
a = Objetivo.create(variable: variable, proyeccion_mensual: 5, porcentaje_proyectado: 5, user: user)
exit
a.errors
a = Objetivo.create(variable: variable, proyeccion_mensual: 5, porcentaje_proyectado: 5, user: user)
Objetivo.create(variable: variable, proyeccion_mensual: 5, porcentaje_proyectado: 5, user: user)
c
user
variable
Objetivo.all
c
variable
user
Objetivo.all
c
Objetivo.all
objetivo.save
user
Objetivo.count
objetiv
Objetivo.all
c
c_variable.objetivo_by_user(current_user)
c_variable.nombre
c_variable
~c_variable.name
~c_variable.nombre
c
@tablero.count
@tablero
c
a.count
a = Variable.sucursal_dashboard(current_user.codigo_sucursal)
exit
a = Variable.sucursal_dashboard(current_user.codigo_sucursal)
a.count
a = Variable.sucursal_dashboard(current_user.codigo_sucursal)
exit
a = Registro.joins(:variable).all
a = Registro.joins(:user).all
a.first.user
a.first
a = Registro.all
a.first
a
