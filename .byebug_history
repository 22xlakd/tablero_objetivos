c
params
c
objetivos
c
codigo_sucursal
n
params
c
@variable.update(variable_params)
variable_params["objetivos_attributes"]["2"]
variable_params
c
variable_params
variable_params["objetivos_attributes"]
variable_params["objetivos_attributes"] = {"0"=>{"id"=>"1", "proyeccion_mensual"=>"56.0", "porcentaje_proyectado"=>"10.0", "valor"=>"103.0"}, "1"=>{"id"=>"5", "proyeccion_mensual"=>"12.0", "porcentaje_proyectado"=>"10.0", "valor"=>"20.0"}, "2"=>{"id"=>"", "proyeccion_mensual"=>"55", "porcentaje_proyectado"=>"35", "valor"=>"11", "user_id"=>"4"}}
variable_params["objetivos_attributes"]
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]["2"] = {"id"=>"", "proyeccion_mensual"=>"55", "porcentaje_proyectado"=>"35", "valor"=>"11", "user_id"=>"4"}
variable_params["objetivos_attributes"]["2"]
{"id"=>"", "proyeccion_mensual"=>"55", "porcentaje_proyectado"=>"35", "valor"=>"11"}
variable_params["objetivos_attributes"]["2"] = {"id"=>"", "proyeccion_mensual"=>"55", "porcentaje_proyectado"=>"35", "valor"=>"11"}
variable_params["objetivos_attributes"]["2"]
c
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]["2"]["user_id"] = "2"
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]["2"][:user_id] = "2"
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]["2"]["user_id"] = "4"
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]["2"]["user_id"] = "4"
variable_params["objetivos_attributes"]["2"]
variable_params["objetivos_attributes"]
variable_params
@variable.errors
@variable.update(variable_params)
c
user_params
n
params[:user][:password].blank? && params[:user][:password_confirmation].blank?
params
c
Role.all
c
ff.index
ff.methods.grep /inde/
ff.object.methods.grep /is/
ff.object.methods.grep /first/
ff.object.methods
ff.object
ff.display
ff.methods.grep /is/
ff.class
ff.methods.grep /first/
ff.first?
ff
c
ff.object.user.nombre
ff.object.user
ff.object
ff.object.class
ff.methods.grep /obj/
ff
c
@variable.objetivos.group_by(&:user_id).as_json
@variable.objetivos.group_by(&:user_id).to_json.methods
@json_objectives_by_user
c
@variable.objetivos.group_by(&:user_id).to_json
@variable.objetivos.group_by(&:user_id)
@variable.objetivos.group_by(&:user.id)
@variable.objetivos.first
@variable.objetivos.count
@variable.objetivos
@variable
params
local_variables
local_variable
locals
c
objetivo
local_variables
locals
c
objetivo
locals
c
a.errors
a = Objetivo.create(variable: variable, proyeccion_mensual: 5, porcentaje_proyectado: 5, user: user)
c
a.errors.second
a.errors.first
a.errors.last
a.errors
a.errors.class
a.errors[1]
a.errors.last
a.errors.first
a.errors.count
a.errors
a = Objetivo.create(variable: variable, proyeccion_mensual: 5, porcentaje_proyectado: 5, user: user)
exit
a.errors
a = Objetivo.create(variable: variable, proyeccion_mensual: 5, porcentaje_proyectado: 5, user: user)
Objetivo.create(variable: variable, proyeccion_mensual: 5, porcentaje_proyectado: 5, user: user)
c
user
variable
Objetivo.all
c
variable
user
Objetivo.all
c
Objetivo.all
objetivo.save
user
Objetivo.count
objetiv
Objetivo.all
c
c_variable.objetivo_by_user(current_user)
c_variable.nombre
c_variable
~c_variable.name
~c_variable.nombre
c
@tablero.count
@tablero
c
a.count
a = Variable.sucursal_dashboard(current_user.codigo_sucursal)
exit
a = Variable.sucursal_dashboard(current_user.codigo_sucursal)
a.count
a = Variable.sucursal_dashboard(current_user.codigo_sucursal)
exit
a = Registro.joins(:variable).all
a = Registro.joins(:user).all
a.first.user
a.first
a = Registro.all
a.first
a
a = Variable.sucursal_dashboard(current_user.codigo_sucursal)
a.pluck
a.count
a.methods
a.class
a
a.count
a = Variable.sucursal_dashboard(current_user.codigo_sucursal)
c
@tablero.count
current_user.registros.map{|r| r.variable}.uniq.count
current_user.registros.map{|r| r.variable}.uniq
exit
@tablero.count
@tablero
current_user.registros.map{|r| r.variable}.uniq
current_user.registros
exit
current_user.registros.map{|r| r.variable}.uniq
current_user.registros
@tablero.count
@tablero
exit
authorize! :read, Variable.find(2)
current_user.registros
current_user.variables
current_user
authorize! :read, Variable.all
@tablero.count
@tablero
c
a.sum(:value)
a.sum(0,&:value)
a.sum(&:value)
a.methods.grep /sum/
a.class
a = registros_by_user(user)
c
 @tablero.in_groups_of(4, false){|g| puts g}
 @tablero.in_groups_of(4){|g| puts g}
 @tablero.in_groups_of(4, false){|g| puts g}
@tablero.first.registros_by_user(current_user).count
@tablero.first.registros_by_user(current_user)
@tablero.registros_by_user(current_user)
@tablero
exit
a.registros(current_user.codigo_sucursal).count
a.registros.count
a.registros
a = Variable.first
a.last
a.first
a.count
a = Variable.sucursal_dashboard(current_user.codigo_sucursal)
a.first.registros.count
a.first.registros.where(codigo_sucursal: current_user.codigo_sucursal).count
a = Variable.all
exit
current_user
a.first.registros.count
a.first.registros.where(codigo_sucursal: current_user.codigo_sucursal).count
a = Variable.all
c
a.first.registros.where(codigo_sucursal: current_user.codigo_sucursal).count
a.first.registros.count
a.first
a = Variable.all
a.first.registros.where(codigo_sucursal: current_user.codigo_sucursal).count
a.first.registros.count
a.first.registros.where(codigo_sucursal: current_user.codigo_sucursal)
a.first.registros
a.first
a,first
a.count
a = Variable.all
Variable.joins(registros: :user).where('registros.codigo_sucursal': current_user.codigo_sucursal)
@tablero
exit
@tablero[2]
@tablero[1]
@tablero.first
@tablero.count
@tablero.in_groups_of(4, 'AAA'){|g| puts g}
@tablero.in_groups_of(4, ''){|g| puts g}
@tablero.in_groups_of(4, false){|g| puts g}
c
c_variable.first
c_variable.last
c_variable.count
c
c_variable.last
c_variable.first
c_variable.count
c_variable
c
@tablero.first
@tablero.count
@tablero
c
local_all
local
variables
local_variables
tablero
c
Time.zone.today.strftime("%B")
    - :month
    - :day
    order:
    - diciembre
    - noviembre
